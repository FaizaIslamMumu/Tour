@model MasterDetailsEVidence.ViewModels.ClientVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Edit", "Clients", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <hr />
        <div class="col-6">
            <h4>Client</h4>
            @Html.HiddenFor(x => x.ClientId)
            <div class="form-group">
                @Html.LabelFor(model => model.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ClientName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PictureFile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PictureFile, "", new { @class = "form-control", Type = "file" })
                    @Html.ValidationMessageFor(model => model.PictureFile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.MaritalStatus)
                        @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-primary btn-sm" />
                </div>
            </div>
        </div>
        <div class="col-6">
            <h4>Select Spot</h4>
            <div class="d-flex justify-content-end mb-2">
                <a href="" id="btnPlus" class="btn btn-primary btn-sm"><i class="fa fa-plus"></i></a>
            </div>
            <div id="SpotContainer">
                @foreach (var item in Model.SpotList)
                {
                    @Html.Action("AddNewSpot", "Clients", new { id = item})
                }
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $("#btnPlus").click(function (e) {
            e.preventDefault();
            var spotContainer = $("#SpotContainer")

            $.ajax({
                url: "/Clients/AddNewSpot",
                type: "GET",
                success: function (data) {
                    spotContainer.append(data);
                }
            });

        });
        $(document).on("click", "#btnDeleteSpot", function (e) {
            e.preventDefault();
            $(this).parent().parent().remove();
        });
    </script>
}
